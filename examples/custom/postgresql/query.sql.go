// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: query.sql

package authors

import (
	"context"
)

const listAuthors = `-- name: ListAuthors :many
SELECT id, fullname, bio_default, one FROM (
	SELECT id, lower(name) as fullname, coalese(bio, 'none') as bio_default, 1 as one
	FROM authors) AS named_author
ORDER BY fullname
`

func (q *Queries) ListAuthors(ctx context.Context) ([]NamedAuthor, error) {
	rows, err := q.db.QueryContext(ctx, listAuthors)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []NamedAuthor
	for rows.Next() {
		var i NamedAuthor
		if err := rows.Scan(
			&i.ID,
			&i.Fullname,
			&i.BioDefault,
			&i.One,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}